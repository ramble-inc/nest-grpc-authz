name: CI
on: [push, pull_request]

jobs:
  build:
    name: CI

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache/Restore yarn
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ matrix.node-version }}-
    # https://stackoverflow.com/questions/61010294/how-to-cache-yarn-packages-in-github-actions
    - name: Cache/Restore node_modules
      uses: actions/cache@v2
      id: node_modules-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-node_modules-
    - name: Install dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true' ||
        steps.node_modules-cache.outputs.cache-hit != 'true'
      run: yarn --frozen-lockfile
    - run: yarn lint
    - run: yarn build
